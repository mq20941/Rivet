double Npure_j1 = 0;
           double Nimpure_j1 = 0;
           Particles& constituents = wJets[i].particles();
           for (Particle p : constituents) {
             bool w_tagged = false;
             w_tagged |= p.hasAncestor(24, false);
             w_tagged |= p.hasAncestor(-24, false);
             if (w_tagged) Npure_j1 += 1;
             if (!w_tagged) Nimpure_j1 += 1;
           }

           double purity_j1 = Npure_j1/(Npure_j1+Nimpure_j1);
           p_wjet1purity_pTbins->fill(wJets[i].pT(), purity_j1);

           double Npure_j2 = 0;
           double Nimpure_j2 = 0;
           Particles& constituents = wJets[j].particles();
           for (Particle p : constituents) {
             bool w_tagged = false;
             w_tagged |= p.hasAncestor(24, false);
             w_tagged |= p.hasAncestor(-24, false);
             if (w_tagged) Npure_j2 += 1;
             if (!w_tagged) Nimpure_j2 += 1;
           }

           double purity_j2 = Npure_j2/(Npure_j2+Nimpure_j2);
           p_wjet2purity_pTbins->fill(wJets[j].pT(), purity_j2);


book(p_wjet1purity_pTbins, "wjet1purity_pTbins", 2, 20, 100);
      book(p_wjet2purity_pTbins, "wjet2purity_pTbins", 2, 20, 100);

Profile1DPtr p_wjet1purity_pTbins;
    Profile1DPtr p_wjet2purity_pTbins;